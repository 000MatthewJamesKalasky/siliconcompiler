{
    "arg": {
        "index": {
            "defvalue": "0",
            "lock": "false",
            "require": null,
            "shorthelp": "Current step Index",
            "switch": "-arg_index <str>",
            "type": "str",
            "value": null
        }
    },
    "asic": {
        "aspectratio": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Block aspect ratio",
            "switch": "-asic_aspectratio <float>",
            "type": "float",
            "value": "1"
        },
        "corearea": {
            "defvalue": [],
            "lock": "false",
            "require": null,
            "shorthelp": "Core area outline",
            "switch": "-asic_corearea '<[(float,float)]'>",
            "type": "[(float,float)]",
            "value": [
                "(10.07,11.2)",
                "(90.25,91)"
            ]
        },
        "coremargin": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Block core margin",
            "switch": "-asic_coremargin <float>",
            "type": "float",
            "value": "1.9"
        },
        "density": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Target core density",
            "switch": "-asic_density <float>",
            "type": "float",
            "value": "10"
        },
        "diearea": {
            "defvalue": [],
            "lock": "false",
            "require": null,
            "shorthelp": "Die area outline",
            "switch": "-asic_diearea '<[(float,float)]'>",
            "type": "[(float,float)]",
            "value": [
                "(0,0)",
                "(100.13,100.8)"
            ]
        },
        "hpinlayer": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Horizontal pin layer",
            "switch": "-asic_hpinlayer <str>",
            "type": "str",
            "value": "m3"
        },
        "maxcap": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Maximum net capacitance",
            "switch": "-asic_maxcap <float>",
            "type": "float",
            "value": "2e-13"
        },
        "maxfanout": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Maximum fanout",
            "switch": "-asic_maxfanout <int>",
            "type": "int",
            "value": "64"
        },
        "maxlayer": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Maximum routing layer",
            "switch": "-asic_maxlayer <str>",
            "type": "str",
            "value": "m10"
        },
        "maxlength": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Maximum wire length",
            "switch": "-asic_maxlength <float>",
            "type": "float",
            "value": "1000"
        },
        "maxslew": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Maximum slew",
            "switch": "-asic_maxslew <float>",
            "type": "float",
            "value": "2e-10"
        },
        "minlayer": {
            "defvalue": [],
            "lock": "false",
            "require": null,
            "shorthelp": "Minimum routing layer",
            "switch": "-asic_minlayer <str>",
            "type": "str",
            "value": "m1"
        },
        "rclayer": {
            "clk": {
                "defvalue": null,
                "lock": "false",
                "require": null,
                "shorthelp": "Parasitic extraction estimation layer",
                "switch": "-asic_rclayer 'name <str>'",
                "type": "str",
                "value": "m5"
            },
            "data": {
                "defvalue": null,
                "lock": "false",
                "require": null,
                "shorthelp": "Parasitic extraction estimation layer",
                "switch": "-asic_rclayer 'name <str>'",
                "type": "str",
                "value": "m3"
            }
        },
        "stackup": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Design Metal Stackup",
            "switch": "-asic_stackup <str>",
            "type": "str",
            "value": "10M"
        },
        "targetlib": {
            "defvalue": [],
            "lock": "false",
            "require": null,
            "shorthelp": "Target libraries",
            "switch": "-asic_targetlib <str>",
            "type": "[str]",
            "value": [
                "NangateOpenCellLibrary"
            ]
        },
        "vpinlayer": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Vertical pin layer",
            "switch": "-asic_vpinlayer <str>",
            "type": "str",
            "value": "m2"
        }
    },
    "checkonly": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Exit after checking flow",
        "switch": "-checkonly <bool>",
        "type": "bool",
        "value": "false"
    },
    "clean": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Clean up files after run",
        "switch": "-clean <bool>",
        "type": "bool",
        "value": "false"
    },
    "constraint": {
        "author": [],
        "copy": "true",
        "date": [],
        "defvalue": [],
        "filehash": [],
        "hashalgo": [
            "sha256"
        ],
        "lock": "false",
        "require": null,
        "shorthelp": "Design constraint files",
        "signature": [],
        "switch": "-constraint <file>",
        "type": "[file]",
        "value": [
            "examples/gcd/gcd.sdc"
        ]
    },
    "copyall": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Copy all inputs to jobdir",
        "switch": "-copyall <bool>",
        "type": "bool",
        "value": "false"
    },
    "design": {
        "defvalue": null,
        "lock": "false",
        "require": null,
        "shorthelp": "Design top module name",
        "switch": "-design <str>",
        "type": "str",
        "value": "gcd"
    },
    "dir": {
        "defvalue": "build",
        "lock": "false",
        "require": "all",
        "shorthelp": "Build directory",
        "switch": "-dir <dir>",
        "type": "dir",
        "value": "build"
    },
    "eda": {
        "klayout": {
            "export": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "true"
                    },
                    "exe": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable name",
                        "switch": "-eda_exe 'tool step index <str>'",
                        "type": "str",
                        "value": "klayout"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    },
                    "option": {
                        "cmdline": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "-zz"
                            ]
                        }
                    },
                    "output": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "1fe1e87e0adb1585e0f9dd4ad55cdc236f85064ba32e18eee9a51e9f616c0b72"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of output files ",
                        "signature": [],
                        "switch": "-eda_output 'tool step index <str>'",
                        "type": "[file]",
                        "value": [
                            "gcd.gds"
                        ]
                    },
                    "refdir": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Reference directory",
                        "switch": "-eda_refdir 'tool step index <dir>'",
                        "type": "dir",
                        "value": "tools/klayout"
                    },
                    "require": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of required tool parameters",
                        "switch": "-eda_req 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "asic,targetlib",
                            "asic,stackup",
                            "pdk,layermap,10M,def,gds",
                            "library,NangateOpenCellLibrary,gds",
                            "library,NangateOpenCellLibrary,lef"
                        ]
                    },
                    "script": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Entry point script",
                        "signature": [],
                        "switch": "-eda_script 'tool step index <file>'",
                        "type": "[file]",
                        "value": [
                            "tools/klayout/klayout_export.py"
                        ]
                    },
                    "version": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version number",
                        "switch": "-eda_version 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "0.26.11"
                        ]
                    },
                    "vswitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version switch",
                        "switch": "-eda_vswitch 'tool step index <str>'",
                        "type": "str",
                        "value": "-zz -v"
                    }
                }
            }
        },
        "minimum": {
            "ctsmin": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    }
                }
            },
            "dfmmin": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    }
                }
            },
            "floorplanmin": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    }
                }
            },
            "physynmin": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    }
                }
            },
            "placemin": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    }
                }
            },
            "routemin": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    }
                }
            },
            "synmin": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    }
                }
            }
        },
        "openroad": {
            "cts": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "exe": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable name",
                        "switch": "-eda_exe 'tool step index <str>'",
                        "type": "str",
                        "value": "openroad"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    },
                    "option": {
                        "cmdline": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "-no_init -exit"
                            ]
                        },
                        "macro_place_channel": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "18.8",
                                "19.95"
                            ]
                        },
                        "macro_place_halo": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "22.4",
                                "15.12"
                            ]
                        },
                        "pad_detail_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "1"
                            ]
                        },
                        "pad_global_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "2"
                            ]
                        },
                        "place_density": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "0.3"
                            ]
                        }
                    },
                    "output": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "5a5f22eb2c69266fa5d49262ac79abfa11856568bb50f7787ab3f3b01a922939",
                            "8e5f5e025e18101872330da022cbbc03d46dbf96030b0379b59dab9259663e79",
                            "3255f3b051d64d79725be528522c03e074c2ea1dd82274100cefd65d913b205b"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of output files ",
                        "signature": [],
                        "switch": "-eda_output 'tool step index <str>'",
                        "type": "[file]",
                        "value": [
                            "gcd.sdc",
                            "gcd.vg",
                            "gcd.def"
                        ]
                    },
                    "refdir": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Reference directory",
                        "switch": "-eda_refdir 'tool step index <dir>'",
                        "type": "dir",
                        "value": "tools/openroad"
                    },
                    "require": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of required tool parameters",
                        "switch": "-eda_req 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "asic,targetlib",
                            "asic,stackup",
                            "library,NangateOpenCellLibrary,arch",
                            "pdk,aprtech,10M,10t,lef",
                            "library,NangateOpenCellLibrary,nldm,typical,lib",
                            "library,NangateOpenCellLibrary,lef"
                        ]
                    },
                    "script": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Entry point script",
                        "signature": [],
                        "switch": "-eda_script 'tool step index <file>'",
                        "type": "[file]",
                        "value": [
                            "tools/openroad/sc_apr.tcl"
                        ]
                    },
                    "threads": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Job parallelism",
                        "switch": "-eda_threads 'tool step index <int>'",
                        "type": "int",
                        "value": "8"
                    },
                    "version": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version number",
                        "switch": "-eda_version 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "v2.0"
                        ]
                    },
                    "vswitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version switch",
                        "switch": "-eda_vswitch 'tool step index <str>'",
                        "type": "str",
                        "value": "-version"
                    }
                }
            },
            "dfm": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "exe": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable name",
                        "switch": "-eda_exe 'tool step index <str>'",
                        "type": "str",
                        "value": "openroad"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    },
                    "option": {
                        "cmdline": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "-no_init -exit"
                            ]
                        },
                        "macro_place_channel": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "18.8",
                                "19.95"
                            ]
                        },
                        "macro_place_halo": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "22.4",
                                "15.12"
                            ]
                        },
                        "pad_detail_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "1"
                            ]
                        },
                        "pad_global_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "2"
                            ]
                        },
                        "place_density": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "0.3"
                            ]
                        }
                    },
                    "output": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "96ef6820192bda8b9c1e0c623a3ad5473870bc62238181b8b30b2aa8cbc31b26",
                            "c72032747ea5299b7a45bb1bead30276029fc97bf5cd8d3f48e9b6f10e433f71",
                            "e05a718e28bb20da1518bddeb2835e29a155b7d43fec5711c34c38d23192bdde"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of output files ",
                        "signature": [],
                        "switch": "-eda_output 'tool step index <str>'",
                        "type": "[file]",
                        "value": [
                            "gcd.sdc",
                            "gcd.vg",
                            "gcd.def"
                        ]
                    },
                    "refdir": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Reference directory",
                        "switch": "-eda_refdir 'tool step index <dir>'",
                        "type": "dir",
                        "value": "tools/openroad"
                    },
                    "require": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of required tool parameters",
                        "switch": "-eda_req 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "asic,targetlib",
                            "asic,stackup",
                            "library,NangateOpenCellLibrary,arch",
                            "pdk,aprtech,10M,10t,lef",
                            "library,NangateOpenCellLibrary,nldm,typical,lib",
                            "library,NangateOpenCellLibrary,lef"
                        ]
                    },
                    "script": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Entry point script",
                        "signature": [],
                        "switch": "-eda_script 'tool step index <file>'",
                        "type": "[file]",
                        "value": [
                            "tools/openroad/sc_apr.tcl"
                        ]
                    },
                    "threads": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Job parallelism",
                        "switch": "-eda_threads 'tool step index <int>'",
                        "type": "int",
                        "value": "8"
                    },
                    "version": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version number",
                        "switch": "-eda_version 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "v2.0"
                        ]
                    },
                    "vswitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version switch",
                        "switch": "-eda_vswitch 'tool step index <str>'",
                        "type": "str",
                        "value": "-version"
                    }
                }
            },
            "floorplan": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "exe": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable name",
                        "switch": "-eda_exe 'tool step index <str>'",
                        "type": "str",
                        "value": "openroad"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    },
                    "option": {
                        "cmdline": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "-no_init -exit"
                            ]
                        },
                        "macro_place_channel": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "18.8",
                                "19.95"
                            ]
                        },
                        "macro_place_halo": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "22.4",
                                "15.12"
                            ]
                        },
                        "pad_detail_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "1"
                            ]
                        },
                        "pad_global_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "2"
                            ]
                        },
                        "place_density": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "0.3"
                            ]
                        }
                    },
                    "output": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "e785bb409ef5018fc27f414b851deb25e86d177cea9e4120cf60eea7124a26a4",
                            "c49f5ea05bda59c765197bb885e76b12899f475008ae91de213f3ef0903e4931",
                            "11ff8c02c954806f17795d633a35bf32e548af8f79ba93853d566238ff5a0f82"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of output files ",
                        "signature": [],
                        "switch": "-eda_output 'tool step index <str>'",
                        "type": "[file]",
                        "value": [
                            "gcd.sdc",
                            "gcd.vg",
                            "gcd.def"
                        ]
                    },
                    "refdir": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Reference directory",
                        "switch": "-eda_refdir 'tool step index <dir>'",
                        "type": "dir",
                        "value": "tools/openroad"
                    },
                    "require": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of required tool parameters",
                        "switch": "-eda_req 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "asic,targetlib",
                            "asic,stackup",
                            "library,NangateOpenCellLibrary,arch",
                            "pdk,aprtech,10M,10t,lef",
                            "library,NangateOpenCellLibrary,nldm,typical,lib",
                            "library,NangateOpenCellLibrary,lef"
                        ]
                    },
                    "script": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Entry point script",
                        "signature": [],
                        "switch": "-eda_script 'tool step index <file>'",
                        "type": "[file]",
                        "value": [
                            "tools/openroad/sc_apr.tcl"
                        ]
                    },
                    "threads": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Job parallelism",
                        "switch": "-eda_threads 'tool step index <int>'",
                        "type": "int",
                        "value": "8"
                    },
                    "version": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version number",
                        "switch": "-eda_version 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "v2.0"
                        ]
                    },
                    "vswitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version switch",
                        "switch": "-eda_vswitch 'tool step index <str>'",
                        "type": "str",
                        "value": "-version"
                    }
                }
            },
            "physyn": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "exe": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable name",
                        "switch": "-eda_exe 'tool step index <str>'",
                        "type": "str",
                        "value": "openroad"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    },
                    "option": {
                        "cmdline": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "-no_init -exit"
                            ]
                        },
                        "macro_place_channel": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "18.8",
                                "19.95"
                            ]
                        },
                        "macro_place_halo": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "22.4",
                                "15.12"
                            ]
                        },
                        "pad_detail_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "1"
                            ]
                        },
                        "pad_global_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "2"
                            ]
                        },
                        "place_density": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "0.3"
                            ]
                        }
                    },
                    "output": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "2529af4708b7e05297069811dd78195be5afb42b14acfe79e270ccdbd7ce39be",
                            "d5497aaa0815c5a2c90aef535292ed199a89de605f17b22ab43eb2996db60eb0",
                            "11ff8c02c954806f17795d633a35bf32e548af8f79ba93853d566238ff5a0f82"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of output files ",
                        "signature": [],
                        "switch": "-eda_output 'tool step index <str>'",
                        "type": "[file]",
                        "value": [
                            "gcd.sdc",
                            "gcd.vg",
                            "gcd.def"
                        ]
                    },
                    "refdir": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Reference directory",
                        "switch": "-eda_refdir 'tool step index <dir>'",
                        "type": "dir",
                        "value": "tools/openroad"
                    },
                    "require": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of required tool parameters",
                        "switch": "-eda_req 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "asic,targetlib",
                            "asic,stackup",
                            "library,NangateOpenCellLibrary,arch",
                            "pdk,aprtech,10M,10t,lef",
                            "library,NangateOpenCellLibrary,nldm,typical,lib",
                            "library,NangateOpenCellLibrary,lef"
                        ]
                    },
                    "script": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Entry point script",
                        "signature": [],
                        "switch": "-eda_script 'tool step index <file>'",
                        "type": "[file]",
                        "value": [
                            "tools/openroad/sc_apr.tcl"
                        ]
                    },
                    "threads": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Job parallelism",
                        "switch": "-eda_threads 'tool step index <int>'",
                        "type": "int",
                        "value": "8"
                    },
                    "version": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version number",
                        "switch": "-eda_version 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "v2.0"
                        ]
                    },
                    "vswitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version switch",
                        "switch": "-eda_vswitch 'tool step index <str>'",
                        "type": "str",
                        "value": "-version"
                    }
                }
            },
            "place": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "exe": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable name",
                        "switch": "-eda_exe 'tool step index <str>'",
                        "type": "str",
                        "value": "openroad"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    },
                    "option": {
                        "cmdline": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "-no_init -exit"
                            ]
                        },
                        "macro_place_channel": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "18.8",
                                "19.95"
                            ]
                        },
                        "macro_place_halo": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "22.4",
                                "15.12"
                            ]
                        },
                        "pad_detail_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "1"
                            ]
                        },
                        "pad_global_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "2"
                            ]
                        },
                        "place_density": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "0.3"
                            ]
                        }
                    },
                    "output": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "f31d8dcf5b549e4165f348f206285653d84f7708cbb0ba6f233923f8e3675344",
                            "7d210c9ad2cdcd4f76569b1d81aa5ac1b7aa41fefcdbe685a7855c3aa2b62393",
                            "21a7c590a6050834356ea07d8b65fd0dd2718c9013c1ed297dfd49f551b1f4a9"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of output files ",
                        "signature": [],
                        "switch": "-eda_output 'tool step index <str>'",
                        "type": "[file]",
                        "value": [
                            "gcd.sdc",
                            "gcd.vg",
                            "gcd.def"
                        ]
                    },
                    "refdir": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Reference directory",
                        "switch": "-eda_refdir 'tool step index <dir>'",
                        "type": "dir",
                        "value": "tools/openroad"
                    },
                    "require": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of required tool parameters",
                        "switch": "-eda_req 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "asic,targetlib",
                            "asic,stackup",
                            "library,NangateOpenCellLibrary,arch",
                            "pdk,aprtech,10M,10t,lef",
                            "library,NangateOpenCellLibrary,nldm,typical,lib",
                            "library,NangateOpenCellLibrary,lef"
                        ]
                    },
                    "script": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Entry point script",
                        "signature": [],
                        "switch": "-eda_script 'tool step index <file>'",
                        "type": "[file]",
                        "value": [
                            "tools/openroad/sc_apr.tcl"
                        ]
                    },
                    "threads": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Job parallelism",
                        "switch": "-eda_threads 'tool step index <int>'",
                        "type": "int",
                        "value": "8"
                    },
                    "version": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version number",
                        "switch": "-eda_version 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "v2.0"
                        ]
                    },
                    "vswitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version switch",
                        "switch": "-eda_vswitch 'tool step index <str>'",
                        "type": "str",
                        "value": "-version"
                    }
                }
            },
            "route": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "exe": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable name",
                        "switch": "-eda_exe 'tool step index <str>'",
                        "type": "str",
                        "value": "openroad"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    },
                    "option": {
                        "cmdline": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "-no_init -exit"
                            ]
                        },
                        "macro_place_channel": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "18.8",
                                "19.95"
                            ]
                        },
                        "macro_place_halo": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "22.4",
                                "15.12"
                            ]
                        },
                        "pad_detail_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "1"
                            ]
                        },
                        "pad_global_place": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "2"
                            ]
                        },
                        "place_density": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "0.3"
                            ]
                        }
                    },
                    "output": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "8b4888ea8179172554fb99aa5be220fc44f148a77084a70734b92b4efc657b8f",
                            "857954de0884a3fa9a2204ca59ca6293c5aa19707886b3e6753d284cb6c64732",
                            "e05a718e28bb20da1518bddeb2835e29a155b7d43fec5711c34c38d23192bdde"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of output files ",
                        "signature": [],
                        "switch": "-eda_output 'tool step index <str>'",
                        "type": "[file]",
                        "value": [
                            "gcd.sdc",
                            "gcd.vg",
                            "gcd.def"
                        ]
                    },
                    "refdir": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Reference directory",
                        "switch": "-eda_refdir 'tool step index <dir>'",
                        "type": "dir",
                        "value": "tools/openroad"
                    },
                    "require": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of required tool parameters",
                        "switch": "-eda_req 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "asic,targetlib",
                            "asic,stackup",
                            "library,NangateOpenCellLibrary,arch",
                            "pdk,aprtech,10M,10t,lef",
                            "library,NangateOpenCellLibrary,nldm,typical,lib",
                            "library,NangateOpenCellLibrary,lef"
                        ]
                    },
                    "script": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Entry point script",
                        "signature": [],
                        "switch": "-eda_script 'tool step index <file>'",
                        "type": "[file]",
                        "value": [
                            "tools/openroad/sc_apr.tcl"
                        ]
                    },
                    "threads": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Job parallelism",
                        "switch": "-eda_threads 'tool step index <int>'",
                        "type": "int",
                        "value": "8"
                    },
                    "version": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version number",
                        "switch": "-eda_version 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "v2.0"
                        ]
                    },
                    "vswitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version switch",
                        "switch": "-eda_vswitch 'tool step index <str>'",
                        "type": "str",
                        "value": "-version"
                    }
                }
            }
        },
        "surelog": {
            "import": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "exe": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable name",
                        "switch": "-eda_exe 'tool step index <str>'",
                        "type": "str",
                        "value": "surelog"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    },
                    "option": {
                        "cmdline": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "-parse"
                            ]
                        }
                    },
                    "output": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "176431bdd8f7b061a3f2b3f5753332d26394a3bf1735df062e9d7dd289340120"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of output files ",
                        "signature": [],
                        "switch": "-eda_output 'tool step index <str>'",
                        "type": "[file]",
                        "value": [
                            "gcd.v"
                        ]
                    },
                    "threads": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Job parallelism",
                        "switch": "-eda_threads 'tool step index <int>'",
                        "type": "int",
                        "value": "8"
                    },
                    "version": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version number",
                        "switch": "-eda_version 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "1.14"
                        ]
                    },
                    "vswitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version switch",
                        "switch": "-eda_vswitch 'tool step index <str>'",
                        "type": "str",
                        "value": "--version"
                    }
                }
            }
        },
        "yosys": {
            "syn": {
                "0": {
                    "continue": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Continue on error",
                        "switch": "-eda_continue 'tool step index <bool>'",
                        "type": "bool",
                        "value": "false"
                    },
                    "copy": {
                        "defvalue": "false",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Copy local option",
                        "switch": "-eda_copy 'tool step index <bool>'",
                        "type": "bool",
                        "value": "true"
                    },
                    "exe": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable name",
                        "switch": "-eda_exe 'tool step index <str>'",
                        "type": "str",
                        "value": "yosys"
                    },
                    "format": {
                        "defvalue": "tcl",
                        "lock": "false",
                        "require": null,
                        "shorthelp": "File format tool interface",
                        "switch": "-eda_format 'tool step index <file>'",
                        "type": "str",
                        "value": "tcl"
                    },
                    "option": {
                        "cmdline": {
                            "defvalue": [],
                            "lock": "false",
                            "require": null,
                            "shorthelp": "Executable options",
                            "switch": "-eda_option 'tool step index name <str>'",
                            "type": "[str]",
                            "value": [
                                "-c"
                            ]
                        }
                    },
                    "output": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "59292a57f839e7369b606247eb09baad8e183195ff1d79262dbae95e493e4d21"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of output files ",
                        "signature": [],
                        "switch": "-eda_output 'tool step index <str>'",
                        "type": "[file]",
                        "value": [
                            "gcd.vg"
                        ]
                    },
                    "refdir": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Reference directory",
                        "switch": "-eda_refdir 'tool step index <dir>'",
                        "type": "dir",
                        "value": "tools/yosys"
                    },
                    "require": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "List of required tool parameters",
                        "switch": "-eda_req 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "pdk,process",
                            "design",
                            "asic,targetlib"
                        ]
                    },
                    "script": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Entry point script",
                        "signature": [],
                        "switch": "-eda_script 'tool step index <file>'",
                        "type": "[file]",
                        "value": [
                            "tools/yosys/sc_syn.tcl"
                        ]
                    },
                    "version": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version number",
                        "switch": "-eda_version 'tool step index <str>'",
                        "type": "[str]",
                        "value": [
                            "0.9"
                        ]
                    },
                    "vswitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Executable version switch",
                        "switch": "-eda_vswitch 'tool step index <str>'",
                        "type": "str",
                        "value": "--version"
                    }
                }
            }
        }
    },
    "flowgraph": {
        "cts": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('placemin', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "openroad"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "ctsmin": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('cts', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "minimum"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "dfm": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('routemin', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "openroad"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "dfmmin": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('dfm', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "minimum"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "export": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('dfmmin', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "klayout"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "floorplan": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('synmin', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "openroad"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "floorplanmin": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('floorplan', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "minimum"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "import": {
            "0": {
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "surelog"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "physyn": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('floorplanmin', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "openroad"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "physynmin": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('physyn', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "minimum"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "place": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('physynmin', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "openroad"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "placemin": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('place', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "minimum"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "route": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('ctsmin', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "openroad"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "routemin": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('route', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "minimum"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "syn": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('import', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "yosys"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "synmin": {
            "0": {
                "input": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step input",
                    "switch": "-flowgraph_input 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('syn', '0')"
                    ]
                },
                "tool": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph tool selection",
                    "switch": "-flowgraph_tool 'step <str>'",
                    "type": "str",
                    "value": "minimum"
                },
                "valid": {
                    "defvalue": "false",
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph step/index valid bit",
                    "switch": "-flowgraph_valid 'step 0 <str>'",
                    "type": "bool",
                    "value": "false"
                },
                "weight": {
                    "brams": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "buffers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "cellarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "cells": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "coverage": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "drvs": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "dsps": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "errors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdpaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdtns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "holdwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "irdrop": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "luts": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "memory": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "nets": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "overflow": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "peakpower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "pins": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "registers": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "runtime": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "security": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuppaths": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupslack": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setuptns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "setupwns": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "standbypower": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "totalarea": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "transistors": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "unconstrained": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "utilization": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "vias": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "warnings": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "wirelength": {
                        "defvalue": [],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Flowgraph metric weights",
                        "switch": "-flowgraph_weight 'step metric <float>'",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        }
    },
    "flowstatus": {
        "cts": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('placemin', '0')"
                    ]
                }
            }
        },
        "ctsmin": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('cts', '0')"
                    ]
                }
            }
        },
        "dfm": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('routemin', '0')"
                    ]
                }
            }
        },
        "dfmmin": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "0"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('dfm', '0')"
                    ]
                }
            }
        },
        "export": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "0"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('dfmmin', '0')"
                    ]
                }
            }
        },
        "floorplan": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('synmin', '0')"
                    ]
                }
            }
        },
        "floorplanmin": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('floorplan', '0')"
                    ]
                }
            }
        },
        "import": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                }
            }
        },
        "physyn": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('floorplanmin', '0')"
                    ]
                }
            }
        },
        "physynmin": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('physyn', '0')"
                    ]
                }
            }
        },
        "place": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('physynmin', '0')"
                    ]
                }
            }
        },
        "placemin": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('place', '0')"
                    ]
                }
            }
        },
        "route": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('ctsmin', '0')"
                    ]
                }
            }
        },
        "routemin": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('route', '0')"
                    ]
                }
            }
        },
        "syn": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('import', '0')"
                    ]
                }
            }
        },
        "synmin": {
            "0": {
                "error": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph index error status",
                    "switch": "-flowstatus_error 'step index <int>'",
                    "type": "int",
                    "value": "1"
                },
                "select": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Flowgraph select record",
                    "switch": "-flowstatus_select 'step index <(str,str)>'",
                    "type": "[(str,str)]",
                    "value": [
                        "('syn', '0')"
                    ]
                }
            }
        }
    },
    "fpga": {
        "flash": {
            "defvalue": "false",
            "lock": "false",
            "require": "fpga",
            "shorthelp": "FPGA flash enable",
            "switch": "-fpga_flash <bool>",
            "type": "bool",
            "value": "false"
        },
        "program": {
            "defvalue": "false",
            "lock": "false",
            "require": "fpga",
            "shorthelp": "FPGA program enable",
            "switch": "-fpga_program <bool>",
            "type": "bool",
            "value": "false"
        }
    },
    "hash": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Enabling file hashing",
        "switch": "-hash <bool>",
        "type": "bool",
        "value": "true"
    },
    "jobincr": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Enables jobname auto-increment mode",
        "switch": "-jobincr <bool>",
        "type": "bool",
        "value": "false"
    },
    "jobname": {
        "defvalue": "job0",
        "lock": "false",
        "require": "all",
        "shorthelp": "Job name",
        "switch": "-jobname <str>",
        "type": "str",
        "value": "job0"
    },
    "library": {
        "NangateOpenCellLibrary": {
            "arch": {
                "defvalue": null,
                "lock": "false",
                "require": null,
                "shorthelp": "Library architecture type",
                "switch": "-library_arch 'lib <str>'",
                "type": "str",
                "value": "10t"
            },
            "cells": {
                "buf": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Library cell lists",
                    "switch": "-library_cells 'lib group <str>'",
                    "type": "[str]",
                    "value": [
                        "BUF_X1/A/Z"
                    ]
                },
                "clkbuf": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Library cell lists",
                    "switch": "-library_cells 'lib group <str>'",
                    "type": "[str]",
                    "value": [
                        "BUF_X4"
                    ]
                },
                "endcap": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Library cell lists",
                    "switch": "-library_cells 'lib group <str>'",
                    "type": "[str]",
                    "value": [
                        "FILLCELL_X1"
                    ]
                },
                "filler": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Library cell lists",
                    "switch": "-library_cells 'lib group <str>'",
                    "type": "[str]",
                    "value": [
                        "FILLCELL_X1",
                        "FILLCELL_X2",
                        "FILLCELL_X4",
                        "FILLCELL_X8",
                        "FILLCELL_X16",
                        "FILLCELL_X32"
                    ]
                },
                "hold": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Library cell lists",
                    "switch": "-library_cells 'lib group <str>'",
                    "type": "[str]",
                    "value": [
                        "BUF_X1"
                    ]
                },
                "ignore": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Library cell lists",
                    "switch": "-library_cells 'lib group <str>'",
                    "type": "[str]",
                    "value": [
                        "AOI211_X1",
                        "OAI211_X1"
                    ]
                },
                "tapcell": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Library cell lists",
                    "switch": "-library_cells 'lib group <str>'",
                    "type": "[str]",
                    "value": [
                        "FILLCELL_X1"
                    ]
                },
                "tie": {
                    "defvalue": [],
                    "lock": "false",
                    "require": null,
                    "shorthelp": "Library cell lists",
                    "switch": "-library_cells 'lib group <str>'",
                    "type": "[str]",
                    "value": [
                        "LOGIC1_X1/Z",
                        "LOGIC0_X1/Z"
                    ]
                }
            },
            "driver": {
                "defvalue": [],
                "lock": "false",
                "require": null,
                "shorthelp": "Library default driver cell",
                "switch": "-library_driver 'lib <str>'",
                "type": "[str]",
                "value": [
                    "BUF_X4"
                ]
            },
            "gds": {
                "author": [],
                "copy": "false",
                "date": [],
                "defvalue": [],
                "filehash": [
                    "8b737b6982882de4cc2f409893d5eea31bacce9475551abb48e481483f830dd8"
                ],
                "hashalgo": [
                    "sha256"
                ],
                "lock": "false",
                "require": null,
                "shorthelp": "Library GDS files",
                "signature": [],
                "switch": "-library_gds 'lib <file>'",
                "type": "[file]",
                "value": [
                    "../third_party/pdks/virtual/freepdk45/libs/NangateOpenCellLibrary/r1p0/gds/NangateOpenCellLibrary.gds"
                ]
            },
            "lef": {
                "author": [],
                "copy": "false",
                "date": [],
                "defvalue": [],
                "filehash": [
                    "01a54737cfe44b494fa48b1260f3c77137b8b8b46f0401d7e6ad54383aca60b3"
                ],
                "hashalgo": [
                    "sha256"
                ],
                "lock": "false",
                "require": null,
                "shorthelp": "Library LEF files",
                "signature": [],
                "switch": "-library_lef 'lib <file>'",
                "type": "[file]",
                "value": [
                    "../third_party/pdks/virtual/freepdk45/libs/NangateOpenCellLibrary/r1p0/lef/NangateOpenCellLibrary.macro.mod.lef"
                ]
            },
            "nldm": {
                "typical": {
                    "lib": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "2efd0b32eb580e4e60e72fc0575bb3bc69aac907c91d908442e4ae6d7fe55895"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Library NLDM timing model",
                        "signature": [],
                        "switch": "-library_nldm 'lib corner format <file>'",
                        "type": "[file]",
                        "value": [
                            "../third_party/pdks/virtual/freepdk45/libs/NangateOpenCellLibrary/r1p0/lib/NangateOpenCellLibrary_typical.lib"
                        ]
                    }
                }
            },
            "package": {
                "version": {
                    "defvalue": null,
                    "lock": "false",
                    "require": null,
                    "shorthelp": "library version number",
                    "switch": "-library_version 'lib <str>'",
                    "type": "str",
                    "value": "r1p0"
                }
            },
            "site": {
                "defvalue": [],
                "lock": "false",
                "require": null,
                "shorthelp": "Library site name",
                "switch": "-library_site 'lib <str>'",
                "type": "[str]",
                "value": [
                    "FreePDK45_38x28_10R_NP_162NW_34O"
                ]
            },
            "type": {
                "defvalue": null,
                "lock": "false",
                "require": null,
                "shorthelp": "Library type",
                "switch": "-library_type 'lib <str>'",
                "type": "str",
                "value": "stdcell"
            }
        }
    },
    "loglevel": {
        "defvalue": "WARNING",
        "lock": "false",
        "require": "all",
        "shorthelp": "Logging level",
        "switch": "-loglevel <str>",
        "type": "str",
        "value": "INFO"
    },
    "mcmm": {
        "worst": {
            "check": {
                "defvalue": [],
                "lock": "false",
                "require": null,
                "shorthelp": "Scenario checks",
                "switch": "-mcmm_check 'scenario <str>'",
                "type": "[str]",
                "value": [
                    "setup",
                    "hold"
                ]
            },
            "libcorner": {
                "defvalue": null,
                "lock": "false",
                "require": null,
                "shorthelp": "Scenario library corner",
                "switch": "-mcmm_libcorner 'scenario <str>'",
                "type": "str",
                "value": "typical"
            },
            "mode": {
                "defvalue": null,
                "lock": "false",
                "require": null,
                "shorthelp": "Scenario operating mode",
                "switch": "-mcmm_mode 'scenario <str>'",
                "type": "str",
                "value": "func"
            },
            "pexcorner": {
                "defvalue": null,
                "lock": "false",
                "require": null,
                "shorthelp": "Scenario PEX corner",
                "switch": "-mcmm_pexcorner 'scenario <str>'",
                "type": "str",
                "value": "typical"
            }
        }
    },
    "metric": {
        "cts": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "499.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "419"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.11"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "378"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.000279"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "54"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "3.35"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "1.11"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "1.17e-05"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "6237.5"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "8.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "3"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "ctsmin": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "0.19"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "dfm": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "499.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "1877"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.11"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "378"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.000292"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "54"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "1.37"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "1.09"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "1.17e-05"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "6237.5"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "8.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "dfmmin": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "0.24"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "export": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "1.15"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0"
                    }
                }
            }
        },
        "floorplan": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "414.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "361"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.11"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "320"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.000188"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "54"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "1.21"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.95"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "8.62e-06"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "5914.29"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "7.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "1"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "floorplanmin": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "0.16"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "import": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "0.62"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "physyn": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "414.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "361"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.11"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "320"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.000188"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "54"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "1.23"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.95"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "8.62e-06"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "5914.29"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "7.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "physynmin": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "0.21"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "place": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "490.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "414"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.11"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "373"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.000206"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "54"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "1.61"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "1.11"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "1.13e-05"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "6125.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "8.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "2"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "placemin": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "0.19"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "route": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "499.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "1877"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.11"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "378"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.000292"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "54"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "3.79"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "1.09"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "1.17e-05"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "6237.5"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "8.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "2196"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "3"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "6324.0"
                    }
                }
            }
        },
        "routemin": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "0.22"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "syn": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "413.63"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "249"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "1.05"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "72"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        },
        "synmin": {
            "0": {
                "brams": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA BRAM count metric",
                        "switch": "-metric_brams step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "buffers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Buffer count metric",
                        "switch": "-metric_buffers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "cellarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Cell area metric",
                        "switch": "-metric_cellarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "cells": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Instance count metric",
                        "switch": "-metric_cells step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "coverage": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Test coverage metric",
                        "switch": "-metric_coverage 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "drvs": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Design rule violations metric",
                        "switch": "-metric_drv 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "dsps": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA DSP count metric",
                        "switch": "-metric_dsps step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "errors": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total errors metric",
                        "switch": "-metric_errors 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdpaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold path violations metric",
                        "switch": "-metric_holdpaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "holdslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold slack metric",
                        "switch": "-metric_holdslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdtns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Hold total negative slack metric",
                        "switch": "-metric_holdtns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "holdwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Hold worst negative slack metric",
                        "switch": "-metric_holdwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "irdrop": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Peak IR drop metric",
                        "switch": "-metric_irdrop 'step index group <int>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "luts": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "fpga",
                        "shorthelp": "FPGA LUT metric",
                        "switch": "-metric_luts step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "memory": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total memory metric",
                        "switch": "-metric_memory 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "nets": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Net count metric",
                        "switch": "-metric_nets step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "overflow": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Routing overflow metric",
                        "switch": "-metric_overflow step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "peakpower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total power metric",
                        "switch": "-metric_peakpower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "pins": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Pin count metric",
                        "switch": "-metric_pins step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "registers": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Register count metric",
                        "switch": "-metric_registers 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "runtime": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total runtime metric",
                        "switch": "-metric_runtime 'step index group <float>",
                        "type": "float",
                        "value": "0.15"
                    }
                },
                "security": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Security metric",
                        "switch": "-metric_security 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuppaths": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup path violations metric",
                        "switch": "-metric_setuppaths 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "setupslack": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup slack metric",
                        "switch": "-metric_setupslack 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setuptns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup total negative slack metric",
                        "switch": "-metric_setuptns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "setupwns": {
                    "goal": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0"
                    },
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Setup worst negative slack metric",
                        "switch": "-metric_setupwns 'step index group <float>'",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "standbypower": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Leakage power metric",
                        "switch": "-metric_standbypower step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "totalarea": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Total area metric",
                        "switch": "-metric_totalarea step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "transistors": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Transistor count metric",
                        "switch": "-metric_transistors step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "unconstrained": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Unconstrained paths metric",
                        "switch": "-metric_unconstrained 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "utilization": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Area utilization metric",
                        "switch": "-metric_utilization step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                },
                "vias": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Via count metric",
                        "switch": "-metric_vias step index group <int>",
                        "type": "int",
                        "value": "0"
                    }
                },
                "warnings": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "all",
                        "shorthelp": "Total warnings metric",
                        "switch": "-metric_warnings 'step index group <int>'",
                        "type": "int",
                        "value": "0"
                    }
                },
                "wirelength": {
                    "real": {
                        "defvalue": null,
                        "lock": "false",
                        "require": "asic",
                        "shorthelp": "Wirelength metric",
                        "switch": "-metric_wirelength step index group <float>",
                        "type": "float",
                        "value": "0.0"
                    }
                }
            }
        }
    },
    "mode": {
        "defvalue": null,
        "lock": "false",
        "require": "all",
        "shorthelp": "Compilation mode",
        "switch": "-mode <str>",
        "type": "str",
        "value": "asic"
    },
    "optmode": {
        "defvalue": "O0",
        "lock": "false",
        "require": "all",
        "shorthelp": "Optimization mode",
        "switch": "-O<str>",
        "type": "str",
        "value": "O0"
    },
    "pdk": {
        "aprtech": {
            "10M": {
                "10t": {
                    "lef": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "834a79295054cd4209178d1bade67c353863c47bb4b3c22ee38b862b7cec37f2"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "APR technology file",
                        "signature": [],
                        "switch": "-pdk_aprtech 'stackup libarch filetype <file>'",
                        "type": "[file]",
                        "value": [
                            "../third_party/pdks/virtual/freepdk45/pdk/r1p0/apr/freepdk45.tech.lef"
                        ]
                    }
                }
            }
        },
        "d0": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Process defect density",
            "switch": "-pdk_d0 <float>",
            "type": "float",
            "value": "1.25"
        },
        "edgemargin": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Wafer edge keep-out margin",
            "switch": "-pdk_edgemargin <float>",
            "type": "float",
            "value": "2"
        },
        "foundry": {
            "defvalue": null,
            "lock": "false",
            "require": "asic",
            "shorthelp": "Foundry name",
            "switch": "-pdk_foundry <str>",
            "type": "str",
            "value": "virtual"
        },
        "grid": {
            "10M": {
                "m1": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "1.0"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal1"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.19"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.14"
                    }
                },
                "m10": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.4"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal10"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "1.6"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "1.6"
                    }
                },
                "m2": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.8"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal2"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.19"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.14"
                    }
                },
                "m3": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.7"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal3"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.19"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.14"
                    }
                },
                "m4": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.4"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal4"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.28"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.28"
                    }
                },
                "m5": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.4"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal5"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.28"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.28"
                    }
                },
                "m6": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.4"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal6"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.28"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.28"
                    }
                },
                "m7": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.4"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal7"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.8"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.8"
                    }
                },
                "m8": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.4"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal8"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.8"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.8"
                    }
                },
                "m9": {
                    "adj": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid resource adjustment",
                        "switch": "-pdk_grid_adj 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.4"
                    },
                    "name": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Metal layer name map",
                        "switch": "-pdk_grid_name 'stackup layer <str>'",
                        "type": "str",
                        "value": "metal9"
                    },
                    "xoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire offset",
                        "switch": "-pdk_grid_xoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.095"
                    },
                    "xpitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid vertical wire pitch",
                        "switch": "-pdk_grid_xpitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "1.6"
                    },
                    "yoffset": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire offset",
                        "switch": "-pdk_grid_yoffset 'stackup layer <float>'",
                        "type": "float",
                        "value": "0.07"
                    },
                    "ypitch": {
                        "defvalue": null,
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Routing grid horizontal wire pitch",
                        "switch": "-pdk_grid_ypitch 'stackup layer <float>'",
                        "type": "float",
                        "value": "1.6"
                    }
                }
            }
        },
        "hscribe": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Horizontal scribe line width",
            "switch": "-pdk_hscribe <float>",
            "type": "float",
            "value": "0.1"
        },
        "layermap": {
            "10M": {
                "def": {
                    "gds": {
                        "author": [],
                        "copy": "false",
                        "date": [],
                        "defvalue": [],
                        "filehash": [
                            "ccbc54dc057432a39f553cc7299bd725976a077f944288d7383560bb30e81c7d"
                        ],
                        "hashalgo": [
                            "sha256"
                        ],
                        "lock": "false",
                        "require": null,
                        "shorthelp": "Layout data mapping file",
                        "signature": [],
                        "switch": "-pdk_layermap 'stackup src dst <file>'",
                        "type": "[file]",
                        "value": [
                            "../third_party/pdks/virtual/freepdk45/pdk/r1p0/setup/klayout/freepdk45.lyt"
                        ]
                    }
                }
            }
        },
        "node": {
            "defvalue": null,
            "lock": "false",
            "require": "asic",
            "shorthelp": "Process node",
            "switch": "-pdk_node <float>",
            "type": "float",
            "value": "45"
        },
        "process": {
            "defvalue": null,
            "lock": "false",
            "require": "asic",
            "shorthelp": "Process name",
            "switch": "-pdk_process <str>",
            "type": "str",
            "value": "freepdk45"
        },
        "stackup": {
            "defvalue": [],
            "lock": "false",
            "require": null,
            "shorthelp": "Metal stackups",
            "switch": "-pdk_stackup <str>",
            "type": "[str]",
            "value": [
                "10M"
            ]
        },
        "tapmax": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Tap cell max distance rule",
            "switch": "-pdk_tapmax <float>",
            "type": "float",
            "value": "120"
        },
        "tapoffset": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Tap cell offset rule",
            "switch": "-pdk_tapoffset <float>",
            "type": "float",
            "value": "2"
        },
        "version": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "PDK version number",
            "switch": "-pdk_version <str>",
            "type": "str",
            "value": "r1p0"
        },
        "vscribe": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Vertical scribbling width",
            "switch": "-pdk_vscribe <float>",
            "type": "float",
            "value": "0.1"
        },
        "wafersize": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Wafer size",
            "switch": "-pdk_wafersize <float>",
            "type": "float",
            "value": "300"
        }
    },
    "quiet": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Quiet execution",
        "switch": "-quiet <bool>",
        "type": "bool",
        "value": "true"
    },
    "relax": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Relaxed RTL linting",
        "switch": "-relax <bool>",
        "type": "bool",
        "value": "true"
    },
    "remote": {
        "defvalue": false,
        "lock": "false",
        "require": null,
        "shorthelp": "Flag to run a job through a remote server.",
        "switch": "-remote <bool>",
        "type": "bool",
        "value": false
    },
    "show": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Show layout",
        "switch": "-show <bool>",
        "type": "bool",
        "value": "false"
    },
    "showtool": {
        "def": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Selects tool for file display",
            "switch": "-showtool 'filetype <str>'",
            "type": "str",
            "value": "klayout"
        },
        "gds": {
            "defvalue": null,
            "lock": "false",
            "require": null,
            "shorthelp": "Selects tool for file display",
            "switch": "-showtool 'filetype <str>'",
            "type": "str",
            "value": "klayout"
        }
    },
    "source": {
        "author": [],
        "copy": "true",
        "date": [],
        "defvalue": [],
        "filehash": [],
        "hashalgo": [
            "sha256"
        ],
        "lock": "false",
        "require": null,
        "shorthelp": "Primary source files",
        "signature": [],
        "switch": null,
        "type": "[file]",
        "value": [
            "examples/gcd/gcd.v"
        ]
    },
    "target": {
        "defvalue": null,
        "lock": "false",
        "require": null,
        "shorthelp": "Compilation target",
        "switch": "-target <str>",
        "type": "str",
        "value": "asicflow_freepdk45"
    },
    "trace": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Enables simulation trace output",
        "switch": "-trace <bool>",
        "type": "bool",
        "value": "false"
    },
    "track": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Enable execution tracking",
        "switch": "-track <bool>",
        "type": "bool",
        "value": "false"
    },
    "vercheck": {
        "defvalue": "false",
        "lock": "false",
        "require": "all",
        "shorthelp": "Enforce version checking",
        "switch": "-vercheck <bool>",
        "type": "bool",
        "value": "false"
    },
    "version": {
        "print": {
            "defvalue": "false",
            "lock": "false",
            "require": "all",
            "shorthelp": "Print version number",
            "switch": "-version <bool>",
            "type": "bool",
            "value": "false"
        },
        "sc": {
            "defvalue": null,
            "lock": "true",
            "require": "all",
            "shorthelp": "SiliconCompiler version number",
            "switch": "-version_sc <str>",
            "type": "str",
            "value": "0.1.0"
        },
        "schema": {
            "defvalue": "0.1.0",
            "lock": "true",
            "require": "all",
            "shorthelp": "Schema version number",
            "switch": "-version_schema <str>",
            "type": "str",
            "value": "0.1.0"
        }
    }
}
