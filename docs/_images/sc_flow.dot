digraph G {

	node [style=filled,color=white];

	subgraph cluster_0 {
		style=filled;
		color=lightgrey;
		node [style=filled,color=white];
		import -> syn
		label = "job_0";
	}

	subgraph cluster_1 {
		node [label="floorplan"] floorplan1;
		node [label="apr0"] apr_10;
		node [label="apr1"] apr_11;
		node [label="apr2"] apr_12;
		node [label="apr3"] apr_13;
		node [label="aprmin"] aprmin_1;
		style=filled;
		color=lightgrey;
		floorplan1 -> apr_10;
		floorplan1 -> apr_11;
		floorplan1 -> apr_12;
		floorplan1 -> apr_13;
		apr_10 -> aprmin_1;
		apr_11 -> aprmin_1;
		apr_12 -> aprmin_1;
		apr_13 -> aprmin_1;
		label = "job_1";
	}

	subgraph cluster_2 {
		node [label="floorplan"] floorplan_n;
		node [label="apr0"] apr_n0;
		node [label="apr1"] apr_n1;
		node [label="apr2"] apr_n2;
		node [label="apr3"] apr_n3;
		node [label="aprmin"] aprmin_n;
		style=filled;
		color=lightgrey;
		floorplan_n -> apr_n0;
		floorplan_n -> apr_n1;
		floorplan_n -> apr_n2;
		floorplan_n -> apr_n3;
		apr_n0 -> aprmin_n;
		apr_n1 -> aprmin_n;
		apr_n2 -> aprmin_n;
		apr_n3 -> aprmin_n;
		label = "job_n";
	}


	subgraph cluster_3 {
		{node [label="ppa(job_1,job_n) "] compare;}
		style=filled;
		color=darkgrey;
		compare -> good_enough;
		compare -> modify_floorplan;
		label = "User Python code";
	}

	subgraph cluster_4 {
		style=filled;
		color=lightgrey;
		dfm -> export;
		export -> tapeout;
		label = "job_n+1";
	}

	syn -> floorplan1;
	syn -> floorplan_n;
	aprmin_1 -> compare
	aprmin_n -> compare
	good_enough ->  dfm
	modify_floorplan -> floorplan_n
}
